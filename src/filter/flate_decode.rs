use std::io::Read;

use flate2::bufread::ZlibDecoder;

pub fn flate_decode(
    content: &[u8],
    predictor: Option<u32>,
    columns: Option<u32>,
    colors: Option<u32>,
    bits: Option<u32>,
) -> Option<Vec<u8>> {
    let mut deflater = ZlibDecoder::new(content);
    let mut vec = vec![];
    deflater.read_to_end(&mut vec).ok()?;
    Some(vec)
}

#[cfg(test)]
mod test {
    use super::*;

    #[test]
    fn test_flate_xref_stream() {
        let data = [
            104, 222, 236, 210, 49, 43, 133, 81, 24, 192, 241, 115, 222, 75, 220, 123, 83, 178,
            249, 12, 132, 197, 23, 48, 27, 68, 146, 48, 153, 197, 128, 65, 97, 167, 148, 44, 6, 70,
            70, 211, 141, 69, 12, 38, 139, 20, 163, 146, 193, 104, 208, 237, 46, 74, 215, 251, 252,
            23, 249, 6, 110, 253, 151, 95, 79, 207, 57, 29, 239, 213, 191, 200, 41, 245, 167, 34,
            165, 239, 235, 210, 92, 89, 138, 185, 152, 11, 39, 135, 194, 238, 215, 176, 107, 157,
            121, 133, 249, 242, 247, 78, 81, 103, 51, 128, 95, 56, 202, 190, 201, 253, 131, 112,
            254, 60, 94, 62, 220, 141, 57, 239, 148, 246, 52, 110, 99, 78, 139, 225, 200, 11, 247,
            167, 216, 204, 132, 211, 188, 156, 135, 249, 134, 59, 78, 207, 226, 133, 253, 229, 152,
            251, 174, 194, 218, 26, 246, 134, 245, 6, 243, 17, 242, 119, 107, 207, 97, 245, 141,
            211, 99, 230, 109, 246, 55, 88, 97, 255, 16, 111, 214, 78, 56, 93, 96, 191, 199, 188,
            202, 60, 206, 29, 246, 213, 45, 220, 96, 115, 207, 233, 7, 155, 42, 243, 4, 94, 224,
            44, 251, 199, 210, 214, 102, 249, 205, 57, 55, 63, 249, 93, 41, 255, 119, 7, 223, 59,
            227, 59, 181, 179, 204, 167, 254, 31, 212, 174, 212, 174, 212, 174, 84, 237, 74, 237,
            74, 237, 74, 213, 174, 212, 174, 212, 174, 84, 237, 74, 237, 74, 237, 74, 213, 174,
            212, 174, 212, 174, 84, 237, 74, 237, 74, 237, 74, 213, 174, 212, 174, 212, 174, 84,
            237, 74, 237, 74, 237, 74, 213, 174, 212, 174, 212, 174, 254, 216, 110, 143, 61, 181,
            126, 4, 24, 0, 130, 19, 94, 56,
        ];
        let content = flate_decode(&data, Some(12), Some(5), Some(0), Some(0)).unwrap();
        println!("{:?}", content);
    }
}
